---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import type { GetStaticPaths } from "astro";
import { SITES, getSite } from "../../data";

export const prerender = true;
export const getStaticPaths = (async () => {
  return (await SITES)
    .map((site) => site.id)
    .filter((siteId) => null != siteId)
    .map((siteId) => ({
      params: {
        siteId,
      },
    }));
}) satisfies GetStaticPaths;

const { siteId } = Astro.params;
const site = (await getSite(+siteId))!;
---

<Layout title={`${site.revGeocode} - SFBA Bench Collective`} />
<main>
  <h1>{site.revGeocode}</h1>
  {
    site.benchImageUrl && (
      <Image
        src={site.benchImageUrl}
        alt="Photo of the bench."
        width={500}
        height={500}
      />
    )
  }
  <h3>Info</h3>
  <ul>
    <li>Status: {site.benchStatus}</li>
    <li>Adopter: {site.adopter || <em>None!</em>}</li>
    <li>Builder: {site.benchBuilder || <em>Unknown</em>}</li>
    {site.benchLength && <li>Length: {site.benchLength} ft</li>}
    {site.benchNickname && <li>Nickname: {site.benchNickname}</li>}
    {
      0 < site.lines.length ? (
        <li>
          Bus Lines:
          <ul>
            {site.lines.map((x) => (
              <li>{x}</li>
            ))}
          </ul>
        </li>
      ) : null
    }
    {
      0 < site.notes.length ? (
        <li>
          Notes:
          <ul>
            {site.notes.map((x) => (
              <li>{x}</li>
            ))}
          </ul>
        </li>
      ) : null
    }
  </ul>
  <h3>Links</h3>
  <ul>
    <li>
      <a
        target="_blank"
        href={`https://www.google.com/maps/search/?api=1&query=${site.lat},${site.lon}`}
      >
        Google Maps
      </a>
    </li>
    {
      site.muni && (
        <li>
          <a target="_blank" href={`https://sfmta.com/${site.muni}`}>
            SFMTA
          </a>
        </li>
      )
    }
    {
      site.act && (
        <li>
          <a
            target="_blank"
            href={`https://tp.actransit.org/#/stop/2:${site.act}`}
          >
            AC Transit Trip Planner
          </a>
        </li>
      )
    }
    {
      site.muni && (
        <li>
          <a
            target="_blank"
            href={`https://sfbaytransit.org/search?q=${site.muni}`}
          >
            SF Bay Transit - Muni
          </a>
        </li>
      )
    }
    {
      site.act && (
        <li>
          <a
            target="_blank"
            href={`https://sfbaytransit.org/search?q=${site.act}`}
          >
            SF Bay Transit - AC Transit
          </a>
        </li>
      )
    }
    {
      site.ggt && (
        <li>
          <a
            target="_blank"
            href={`https://sfbaytransit.org/search?q=${site.ggt}`}
          >
            SF Bay Transit - Golden Gate Transit
          </a>
        </li>
      )
    }
  </ul>
  <h3>Raw Data</h3>
  <pre><code>{JSON.stringify(site, null, 2)}</code></pre>
</main>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
