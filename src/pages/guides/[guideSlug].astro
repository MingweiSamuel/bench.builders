---
import "./toc.css";
import { getCollection, render } from "astro:content";
import Page from "../../layouts/Page.astro";

export async function getStaticPaths() {
  const guides = await getCollection("guides");
  return guides.map((guide) => ({
    params: { guideSlug: guide.id },
    props: guide,
  }));
}

export const prerender = true;

const guide = Astro.props;
const { Content } = await render(guide);
---

<Page title={guide.data.title} upHref="/guides" upNav="Guides">
  <div style="font-size: 0.9em" class={guide.data.toc ? "has-toc" : ""}>
    <h1>{guide.data.title}</h1>
    <Content />
  </div>
</Page>

<script>
  // ToC script.
  const observer = new IntersectionObserver((entries) => {
    for (const entry of entries) {
      // Get id of first child node.
      const id = entry.target.firstElementChild?.id;
      if (null == id) continue;
      const el = document.querySelector(`nav.toc li a[href="#${id}"]`);
      if (null == el) continue;

      console.log(id, entry.boundingClientRect);

      el.parentElement!.classList.toggle("active", entry.isIntersecting);
    }
  }, { rootMargin: "-20% 0px -20% 0px" });

  // Track all sections.
  document.querySelectorAll("section").forEach((section) => {
    observer.observe(section);
  });
</script>
