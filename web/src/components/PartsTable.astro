---
import { Image } from "astro:assets";

interface Item {
  qty?: number;
  name: string;
  imgs: ImageInfo[];
}
interface ImageInfo {
  img: ImageMetadata;
  width: number;
  alt: string;
}

interface Props {
  items: Item[];
  kind?: string;
}

const hasQty = Astro.props.items.some((item) => null != item.qty) || null;
const imgPlural = Astro.props.items.some((item) => item.imgs.length > 1) ? "s" : "";
---

<div class="highlight">
  <div class="row header">
    <div class="text">
      {hasQty && <div class="qty">Qty</div>}
      <div class="name">{Astro.props.kind || "Item"}</div>
    </div>
    <div style="flex-grow: 1; flex-shrink: 1; text-align: right;">Image{imgPlural}</div>
  </div>
  {
    Astro.props.items.map(({ qty, name, imgs }) => (
      <div class="row">
        <div class="text">
          {hasQty && <div class="qty">{qty}</div>}
          <div class="name">{name}</div>
        </div>
        {imgs.map(({ img, width, alt }) => (
          <div class="img">
            <Image src={img} {alt} {width} densities={[1, 1.25, 1.5, 2]} />
          </div>
        ))}
      </div>
    ))
  }
</div>

<style>
  .row {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    align-items: center;
    gap: 0.5em;
    margin: 0.75em 1em;
  }
  .row.header {
    font-weight: bold;
  }
  .row > .text {
    display: flex;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 10em;
    min-width: 10em;
  }
  .row > .text > .qty {
    flex-grow: 0;
    flex-shrink: 0;
    width: 3em;
  }
  .row > .text > .name {
    flex: 1 1;
  }
  .row > .img {
    flex-grow: 0;
    flex-shrink: 1;
    text-align: right;
    overflow-x: auto;
  }
  .row > .img > img {
    vertical-align: middle;
  }
</style>
